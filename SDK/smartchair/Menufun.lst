C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MENUFUN
OBJECT MODULE PLACED IN Menufun.obj
COMPILER INVOKED BY: D:\KeilC51\C51\BIN\C51.EXE driver\Menufun.c BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND PRINT(.\Menu
                    -fun.lst) TABS(2) OBJECT(Menufun.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include "menufun.h"
   3          #include "oled.h"
   4          #include "e2prom.h"
   5          #include "key.h"
   6          #include "TOF10120.h"
   7          #include "intrins.h"//nop 函数
   8          #include "adc.h"
   9          #include "timer.h"
  10          
  11          
  12          extern unsigned char KeyFuncIndex ,LastIndex; 
  13          extern unsigned int CurrentPress ;//实际压力差值
  14          extern unsigned int CurrrntDistan ;//实际距离差值
  15          
  16          sbit voice = P3^0;//语音控制  低电平触发
  17          unsigned int jiuzuo_count =0;//久坐持续时间计数器
  18          unsigned char  qishen_count= 0;//起身次数 计数器
  19          
  20          
  21          
  22          static void Delay1ms()    //@12.000MHz
  23          {
  24   1        unsigned char i, j;
  25   1        i = 12;
  26   1        j = 168;
  27   1        do
  28   1        {
  29   2          while (--j);
  30   2        } while (--i);
  31   1      }
  32            static void Delay1s()   //@12.000MHz
  33          {
  34   1        unsigned int i, j;
  35   1        i = 50;
  36   1        j = 168;
  37   1        do
  38   1        {
  39   2          while (--j);
  40   2        } while (--i);
  41   1      }
  42          static void delay(unsigned int z)
  43          {
  44   1        while(z--)
  45   1        {
  46   2          Delay1ms();
  47   2        }
  48   1      }
  49          
  50          void Beep(unsigned char T)
  51          {
  52   1        unsigned char n = 10;
  53   1        for(;n>0;n--)
  54   1        {
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 2   

  55   2           voice = 0;
  56   2           delay(T);
  57   2           voice = 1;
  58   2           delay(T);
  59   2        }
  60   1      }
  61          
  62          unsigned char key_scan_task()
  63          {
  64   1           unsigned char Key_Value=0;
  65   1           Key_Value = GetKey();//按键读取
  66   1          if((Key_Value == KEY_ENTER))//进入设置
  67   1          { 
  68   2               KeyFuncIndex = 1;
  69   2               LastIndex = 0;//进入设置界面
  70   2               return  1;    
  71   2          }
  72   1          else if(Key_Value == KEY_RETURN)
  73   1          {
  74   2             OLED_Fill(0x00); //初始清屏
  75   2             OLED_P8x16Str(0,0,"DistanDiff:");  //上下两个传感器差值的阈值
  76   2             //OLED_P8x16Str(0,6,"enter"); 
  77   2             OLED_P8x16Str(100,6,"esc"); 
  78   2             GetParam(&myparam);//读取阈值参数
  79   2             oled_show_num(90,0,myparam.DistanceDiffLimit,0);
  80   2             while(1)
  81   2             {
  82   3               Key_Value = GetKey();//获取按键 
  83   3               if(Key_Value == KEY_RETURN)//返回主菜单  
  84   3               {     
  85   4                     OLED_Fill(0x00); //初始清屏 
  86   4                     OLED_P8x16Str(0,0,"Press:");  //压力 阈值  实际插值
  87   4                     OLED_P8x16Str(0,2,"Distan:"); //距离 阈值  实际差值
  88   4                     OLED_P8x16Str(0,4,"I2C:");  // 
  89   4                     OLED_P8x16Str(0,6,"ADC:");             
  90   4                     GetParam(&myparam);//读取阈值参数
  91   4                     oled_show_num(40,0,myparam.PressureValue,1);//显示压力阈值
  92   4                     oled_show_num(40,2,myparam.DistanceValue,0);//显示距离阈值      
  93   4                     return 0;  
  94   4               }        
  95   3             }         
  96   2          }
  97   1          
  98   1          return 0;   
  99   1      }
 100          
 101          void MainWin()//主界面
 102          {
 103   1        
 104   1         unsigned int Distan1,Distan2,Distan_difference;
 105   1         unsigned char press1,press2;
 106   1        
 107   1         OLED_Fill(0x00); //初始清屏
 108   1           
 109   1         OLED_P8x16Str(0,0,"Press:");  //压力 阈值  实际插值
 110   1         OLED_P8x16Str(0,2,"Distan:"); //距离 阈值  实际差值
 111   1         OLED_P8x16Str(0,4,"I2C:");  // 
 112   1         OLED_P8x16Str(0,6,"ADC:"); 
 113   1        
 114   1         GetParam(&myparam);//读取阈值参数
 115   1         oled_show_num(40,0,myparam.PressureValue,1);//显示压力阈值
 116   1         oled_show_num(40,2,myparam.DistanceValue,0);//显示距离阈值
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 3   

 117   1            
 118   1         while(1)
 119   1         {
 120   2           if(key_scan_task()) return;// 退出当前页面 进入设置界面
 121   2            
 122   2           Distan1=GetDistance(0);
 123   2           Distan2=GetDistance(1);//获取 测距值
 124   2           
 125   2           press1 = GetADCResult(0);
 126   2           press2 = GetADCResult(1);//获取压力值  判断是否有人坐
 127   2           
 128   2           Distan_difference = DistanDiffer(Distan1,Distan2);//计算距离差值
 129   2           
 130   2           if(Distan_difference> myparam.DistanceValue&&((press1+press2)>10)) //距离超过阈值 驼背 且有人坐 
 131   2           {
 132   3             tuobei_switch = 1;//打开驼背持续时间计数开关 开始累计驼背时间
 133   3             if(T_500ms > 10)//驼背时间超过 5s 语音提醒
 134   3             {
 135   4              Beep(20);//蜂鸣器频率 25HZ
 136   4              tuobei_switch = 0;
 137   4              T_500ms = 0;
 138   4             }
 139   3           }
 140   2           else if((Distan2 > Distan1) && ((Distan2 - Distan1) > myparam.DistanceDiffLimit)&& ((press1+press2)>10)
             - )//上面传感器-下面传感器 > 阈值 报警
 141   2           {
 142   3             tuobei_switch = 1;//打开驼背持续时间计数开关 开始累计驼背时间
 143   3             if(T_500ms > 10)//驼背时间超过 5s 语音提醒
 144   3             {
 145   4              Beep(20);//蜂鸣器频率 25HZ
 146   4              tuobei_switch = 0;
 147   4              T_500ms = 0;
 148   4             }
 149   3           }
 150   2           else//没有持续5s以上超过驼背阈值
 151   2           {   
 152   3               tuobei_switch = 0;
 153   3               T_500ms = 0;
 154   3           }     
 155   2           
 156   2           if(T_500ms_flag == 1)//ADC 采集完成   500ms 执行一次
 157   2           { 
 158   3              jiuzuo_count++; //久坐时间计数器
 159   3              adc_result = GetADCResult(0);
 160   3              adc_result1 = GetADCResult(1); 
 161   3              oled_show_num(30,6, adc_result,0);  //ADC1  
 162   3              oled_show_num(80,6,adc_result1,0);  //ADC2       
 163   3              CurrentPress = DistanDiffer(adc_result,adc_result1);//计算压力差值
 164   3              //CurrentPress =(CurrentPress*100)/(adc_result+adc_result1);
 165   3              oled_show_num(80,0,CurrentPress,1);//显示当前压力差值
 166   3              
 167   3              if((adc_result < 10) && (adc_result1 < 10))//起身标志
 168   3              {
 169   4                  qishen_count++;//起身时间计数  500ms一次
 170   4                  if(qishen_count > 40)   //起身超过 20s 才算起身
 171   4                  {
 172   5                    jiuzuo_count = 0;//人起身  久坐计数器清0          
 173   5                    qishen_count = 0; 
 174   5                  }
 175   4              }
 176   3              else
 177   3              {
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 4   

 178   4                  qishen_count = 0;//不满足 起身条件  起身计数器清0  
 179   4              }
 180   3              if(CurrentPress> myparam.PressureValue)//超过 压力阈值 开启坐歪计数器
 181   3              {
 182   4                  zuowai_switch = 1;//打开坐歪计数开关
 183   4                  if(zuowai_count > 3)//坐歪超过7s
 184   4                  {
 185   5      //               voice = 0;//语音提示
 186   5      //               Delay1s();
 187   5      //               voice = 1;//语音提示
 188   5                     Beep(100);//蜂鸣器频率 5HZ
 189   5                     zuowai_count = 0;
 190   5                     zuowai_switch = 0;
 191   5                  }
 192   4              }
 193   3              else//没有坐歪  关闭坐歪计数开关
 194   3              {
 195   4                  //  voice = 1;
 196   4                     zuowai_count = 0;
 197   4                     zuowai_switch = 0;
 198   4              }
 199   3              if(jiuzuo_count > 120)//久坐 超过 1min 
 200   3              {
 201   4      //             voice = 1;
 202   4      //             Delay1ms();
 203   4                   voice = 0;//语音提示
 204   4                   Delay1s();
 205   4                   voice = 1;//语音提示
 206   4                   jiuzuo_count = 0;//久坐计数器清0         
 207   4                   qishen_count = 0; 
 208   4              }     
 209   3              T_500ms_flag = 0;//开启下一次计数
 210   3           }   
 211   2           oled_show_num(80,2,Distan_difference,0);//显示当前距离差值     
 212   2           oled_show_num(30,4,Distan1,0); //测距1  实际值
 213   2           oled_show_num(80,4,Distan2,0); //测距2  实际值 
 214   2         }
 215   1      }
 216          
 217          void pressureMenu()
 218          {
 219   1         unsigned char Key_Value=0;
 220   1         unsigned char line = 1;// 初始化选择第一行反白
 221   1        
 222   1         OLED_Fill(0x00); //初始清屏  
 223   1        
 224   1         OLED_P8x16Str_t(0,0,"1.SetPressLimit"); //反白第一行 
 225   1         OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 226   1         OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 227   1         
 228   1         OLED_P8x16Str(0,6,"enter"); 
 229   1         OLED_P8x16Str(100,6,"esc"); 
 230   1         
 231   1         while(1)
 232   1         {
 233   2            Key_Value = GetKey();//获取按键
 234   2            if(Key_Value == LEFT)
 235   2            {
 236   3              if(line == 1)//当前是第一行  需要刷新第一行 反白第二行
 237   3              {
 238   4                 OLED_ClearLine(1);
 239   4                 OLED_P8x16Str(0,0,"1.SetPressLimit"); 
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 5   

 240   4                 OLED_P8x16Str_t(0,2,"2.SetDistanLimit"); 
 241   4                 OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 242   4                
 243   4                 OLED_P8x16Str(0,6,"enter"); 
 244   4                 OLED_P8x16Str(100,6,"esc"); 
 245   4                 line = 2;
 246   4              }
 247   3              else if(line == 2)//当前是第二行  需要刷新第二行 反白第三行
 248   3              {
 249   4                 OLED_ClearLine(2);
 250   4                 OLED_P8x16Str(0,0,"1.SetPressLimit"); 
 251   4                 OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 252   4                 OLED_P8x16Str_t(0,4,"3.SetDisdifLimit"); 
 253   4                
 254   4                 OLED_P8x16Str(0,6,"enter"); 
 255   4                 OLED_P8x16Str(100,6,"esc"); 
 256   4                 line = 3;
 257   4              }
 258   3            } 
 259   2            else if(Key_Value == RIGHT) 
 260   2            {
 261   3              if(line == 3)
 262   3              {
 263   4               OLED_ClearLine(3);
 264   4               OLED_P8x16Str(0,0,"1.SetPressLimit"); 
 265   4               OLED_P8x16Str_t(0,2,"2.SetDistanLimit"); 
 266   4               OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 267   4              
 268   4               OLED_P8x16Str(0,6,"enter"); 
 269   4               OLED_P8x16Str(100,6,"esc"); 
 270   4                
 271   4               line = 2;        
 272   4              }
 273   3              else if(line == 2)//刷新第二行 反白第一行
 274   3              {
 275   4                OLED_ClearLine(2);
 276   4                OLED_P8x16Str_t(0,0,"1.SetPressLimit"); 
 277   4                OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 278   4                OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 279   4              
 280   4                OLED_P8x16Str(0,6,"enter"); 
 281   4                OLED_P8x16Str(100,6,"esc"); 
 282   4                line = 1;    
 283   4              }
 284   3            } 
 285   2            else if(Key_Value == KEY_RETURN)//返回主菜单  
 286   2            {
 287   3                 KeyFuncIndex = 0;
 288   3                 LastIndex = 0;
 289   3                 return;  
 290   3            }       
 291   2            
 292   2            else if(Key_Value == KEY_ENTER) 
 293   2            {
 294   3               if(line == 1)//调整压力阈值
 295   3               {
 296   4                 KeyFuncIndex = 4;
 297   4                 LastIndex = 0;
 298   4                 return;  
 299   4               }
 300   3               else if(line == 2)//调整距离阈值
 301   3               {
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 6   

 302   4                 KeyFuncIndex = 5;
 303   4                 LastIndex = 0;
 304   4                 return;  
 305   4               }
 306   3               else//调整距离差的阈值
 307   3               {
 308   4                 KeyFuncIndex = 6;
 309   4                 LastIndex = 0;
 310   4                 return;  
 311   4               }
 312   3            }
 313   2           
 314   2         }
 315   1      }
 316          
 317          void DistanceMenu()
 318          {
 319   1      
 320   1        
 321   1      }
 322          
 323          void DisDiffMenu()
 324          {
 325   1      
 326   1      
 327   1      }
 328          void ChangePressure()//设置 压力阈值
 329          {
 330   1         unsigned char Key_Value=0;
 331   1        
 332   1         OLED_Fill(0x00); //初始清屏  
 333   1        
 334   1         OLED_P8x16Str(40,0,"Setting");//设置  
 335   1        
 336   1         OLED_P8x16Str(0,2,"Pressure:");  
 337   1         GetParam(&myparam);
 338   1         oled_show_num(80,2,myparam.PressureValue,1);
 339   1         
 340   1         OLED_P8x16Str(0,6,"ok"); 
 341   1         OLED_P8x16Str(100,6,"esc"); 
 342   1        
 343   1         while(1)
 344   1         {
 345   2            Key_Value = GetKey();//获取按键
 346   2            if(Key_Value == LEFT)
 347   2            {
 348   3               myparam.PressureValue+=5;
 349   3               if(myparam.PressureValue > 70) myparam.PressureValue = 10;     
 350   3               OLED_ClearLine(2);//清掉旧值
 351   3               OLED_P8x16Str(0,2,"Pressure:");  
 352   3               oled_show_num(80,2,myparam.PressureValue,1);//显示新值
 353   3                  
 354   3               OLED_P8x16Str(0,6,"ok"); 
 355   3               OLED_P8x16Str(100,6,"esc"); 
 356   3            } 
 357   2            else if(Key_Value == RIGHT) 
 358   2            {
 359   3               myparam.PressureValue-=5;
 360   3               if(myparam.PressureValue < 10) myparam.PressureValue = 70;     
 361   3               OLED_ClearLine(2);//清掉旧值
 362   3               OLED_P8x16Str(0,2,"Pressure:");  
 363   3               oled_show_num(80,2,myparam.PressureValue,1);//显示新值
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 7   

 364   3               
 365   3               OLED_P8x16Str(0,6,"ok"); 
 366   3               OLED_P8x16Str(100,6,"esc");    
 367   3            } 
 368   2            else if(Key_Value == KEY_RETURN)//返回设置选择界面
 369   2            {
 370   3                 KeyFuncIndex = 1;
 371   3                 LastIndex = 0;
 372   3                 return;  
 373   3            }       
 374   2            
 375   2            else if(Key_Value == KEY_ENTER) 
 376   2            {
 377   3       
 378   3                 SetParam(&myparam);//保存参数
 379   3              
 380   3                 OLED_Fill(0x00); //初始清屏  
 381   3        
 382   3                 OLED_P8x16Str(40,0,"Save OK!");//保存成功  
 383   3                   
 384   3                 delay(500);//延时500ms 
 385   3                        
 386   3                 KeyFuncIndex = 0;
 387   3                 LastIndex = 0;
 388   3                 return;//返回主菜单         
 389   3            }
 390   2        
 391   2          }
 392   1      }
 393          void ChangeDistance()//改变距离阈值
 394          {
 395   1         unsigned char Key_Value=0;
 396   1        
 397   1         OLED_Fill(0x00); //初始清屏  
 398   1        
 399   1         OLED_P8x16Str(40,0,"Setting");//设置  
 400   1        
 401   1         OLED_P8x16Str(0,2,"Distance:");  
 402   1         GetParam(&myparam);
 403   1         oled_show_num(80,2,myparam.DistanceValue,0);//显示距离阈值
 404   1         
 405   1         OLED_P8x16Str(0,6,"ok"); 
 406   1         OLED_P8x16Str(100,6,"esc"); 
 407   1        
 408   1         while(1)
 409   1         {
 410   2            Key_Value = GetKey();//获取按键
 411   2            if(Key_Value == LEFT)
 412   2            {
 413   3               myparam.DistanceValue++;
 414   3               if(myparam.DistanceValue > 12) myparam.DistanceValue = 3;      
 415   3               OLED_ClearLine(2);//清掉旧值
 416   3               OLED_P8x16Str(0,2,"Distance:");  
 417   3               oled_show_num(80,2,myparam.DistanceValue,0);//显示新值 不带%号
 418   3                  
 419   3               OLED_P8x16Str(0,6,"ok"); 
 420   3               OLED_P8x16Str(100,6,"esc"); 
 421   3            } 
 422   2            else if(Key_Value == RIGHT) 
 423   2            {
 424   3               myparam.DistanceValue--;
 425   3               if(myparam.DistanceValue < 1) myparam.DistanceValue = 12;      
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 8   

 426   3               OLED_ClearLine(2);//清掉旧值
 427   3               OLED_P8x16Str(0,2,"Distance:");  
 428   3               oled_show_num(80,2,myparam.DistanceValue,0);//显示新值
 429   3               
 430   3               OLED_P8x16Str(0,6,"ok"); 
 431   3               OLED_P8x16Str(100,6,"esc");    
 432   3            } 
 433   2            else if(Key_Value == KEY_RETURN)//返回设置选择界面
 434   2            {
 435   3                 KeyFuncIndex = 1;
 436   3                 LastIndex = 0;
 437   3                 return;  
 438   3            }       
 439   2            
 440   2            else if(Key_Value == KEY_ENTER) 
 441   2            {
 442   3       
 443   3                 SetParam(&myparam);//保存参数
 444   3              
 445   3                 OLED_Fill(0x00); //初始清屏  
 446   3        
 447   3                 OLED_P8x16Str(40,0,"Save OK!");//保存成功  
 448   3                   
 449   3                 delay(500);//延时500ms 
 450   3                        
 451   3                 KeyFuncIndex = 0;
 452   3                 LastIndex = 0;
 453   3                 return;//返回主菜单         
 454   3            }
 455   2        
 456   2          }
 457   1      }
 458          
 459          void changeDisDiff()//设置距离差的阈值
 460          {
 461   1         unsigned char Key_Value=0;
 462   1        
 463   1         OLED_Fill(0x00); //初始清屏  
 464   1        
 465   1         OLED_P8x16Str(40,0,"Setting");//设置  
 466   1         OLED_P8x16Str(0,2,"DistDiff:");  
 467   1         GetParam(&myparam);
 468   1         oled_show_num(80,2,myparam.DistanceDiffLimit,0);//显示距离差的阈值
 469   1         
 470   1         OLED_P8x16Str(0,6,"ok"); 
 471   1         OLED_P8x16Str(100,6,"esc"); 
 472   1        
 473   1         while(1)
 474   1         {
 475   2            Key_Value = GetKey();//获取按键
 476   2            if(Key_Value == LEFT)
 477   2            {
 478   3               myparam.DistanceDiffLimit+=10;
 479   3               if(myparam.DistanceDiffLimit > 240) myparam.DistanceDiffLimit = 0;     
 480   3               OLED_ClearLine(2);//清掉旧值
 481   3               OLED_P8x16Str(0,2,"Differ:");  
 482   3               oled_show_num(80,2,myparam.DistanceDiffLimit,0);//显示新值 不带%号
 483   3                  
 484   3               OLED_P8x16Str(0,6,"ok"); 
 485   3               OLED_P8x16Str(100,6,"esc"); 
 486   3            } 
 487   2            else if(Key_Value == RIGHT) 
C51 COMPILER V9.50a   MENUFUN                                                              11/21/2019 19:48:17 PAGE 9   

 488   2            {
 489   3               myparam.DistanceDiffLimit-=10;
 490   3               if(myparam.DistanceDiffLimit < 10) myparam.DistanceDiffLimit = 240;      
 491   3               OLED_ClearLine(2);//清掉旧值
 492   3               OLED_P8x16Str(0,2,"Differ:");  
 493   3               oled_show_num(80,2,myparam.DistanceDiffLimit,0);//显示新值
 494   3               
 495   3               OLED_P8x16Str(0,6,"ok"); 
 496   3               OLED_P8x16Str(100,6,"esc");    
 497   3            } 
 498   2            else if(Key_Value == KEY_RETURN)//返回设置选择界面
 499   2            {
 500   3                 KeyFuncIndex = 1;
 501   3                 LastIndex = 0;
 502   3                 return;  
 503   3            }       
 504   2            
 505   2            else if(Key_Value == KEY_ENTER) 
 506   2            {
 507   3       
 508   3                 SetParam(&myparam);//保存参数
 509   3              
 510   3                 OLED_Fill(0x00); //初始清屏  
 511   3        
 512   3                 OLED_P8x16Str(40,0,"Save OK!");//保存成功  
 513   3                   
 514   3                 delay(500);//延时500ms 
 515   3                        
 516   3                 KeyFuncIndex = 0;
 517   3                 LastIndex = 0;
 518   3                 return;//返回主菜单         
 519   3            }
 520   2        
 521   2          }
 522   1      }
 523          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1937    ----
   CONSTANT SIZE    =    155    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
