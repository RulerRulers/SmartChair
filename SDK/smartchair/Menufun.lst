C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MENUFUN
OBJECT MODULE PLACED IN Menufun.obj
COMPILER INVOKED BY: D:\KeilC51\C51\BIN\C51.EXE driver\Menufun.c BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND PRINT(.\Menu
                    -fun.lst) TABS(2) OBJECT(Menufun.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include "menufun.h"
   3          #include "oled.h"
   4          #include "e2prom.h"
   5          #include "key.h"
   6          #include "TOF10120.h"
   7          #include "intrins.h"//nop º¯Êý
   8          #include "adc.h"
   9          #include "timer.h"
  10          
  11          
  12          extern unsigned char KeyFuncIndex ,LastIndex; 
  13          extern unsigned int CurrentPress ;//Êµ¼ÊÑ¹Á¦²îÖµ
  14          extern unsigned int CurrrntDistan ;//Êµ¼Ê¾àÀë²îÖµ
  15          
  16          sbit voice = P3^0;//ÓïÒô¿ØÖÆ  µÍµçÆ½´¥·¢
  17          unsigned int jiuzuo_count =0;//¾Ã×ø³ÖÐøÊ±¼ä¼ÆÊýÆ÷
  18          unsigned char  qishen_count= 0;//ÆðÉí´ÎÊý ¼ÆÊýÆ÷
  19          
  20          
  21          
  22          static void Delay1ms()    //@12.000MHz
  23          {
  24   1        unsigned char i, j;
  25   1        i = 12;
  26   1        j = 168;
  27   1        do
  28   1        {
  29   2          while (--j);
  30   2        } while (--i);
  31   1      }
  32            static void Delay1s()   //@12.000MHz
  33          {
  34   1        unsigned int i, j;
  35   1        i = 50;
  36   1        j = 168;
  37   1        do
  38   1        {
  39   2          while (--j);
  40   2        } while (--i);
  41   1      }
  42          static void delay(unsigned int z)
  43          {
  44   1        while(z--)
  45   1        {
  46   2          Delay1ms();
  47   2        }
  48   1      }
  49          
  50          void Beep(unsigned char T)
  51          {
  52   1        unsigned char n = 10;
  53   1        for(;n>0;n--)
  54   1        {
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 2   

  55   2           voice = 0;
  56   2           delay(T);
  57   2           voice = 1;
  58   2           delay(T);
  59   2        }
  60   1      }
  61          
  62          unsigned char key_scan_task()
  63          {
  64   1           unsigned char Key_Value=0;
  65   1           Key_Value = GetKey();//°´¼ü¶ÁÈ¡
  66   1          if((Key_Value == KEY_ENTER))//½øÈëÉèÖÃ
  67   1          { 
  68   2               KeyFuncIndex = 1;
  69   2               LastIndex = 0;//½øÈëÉèÖÃ½çÃæ
  70   2               return  1;    
  71   2          }
  72   1          return 0;   
  73   1      }
  74          
  75          void MainWin()//Ö÷½çÃæ
  76          {
  77   1        
  78   1         unsigned int Distan1,Distan2,Distan_difference;
  79   1        
  80   1         OLED_Fill(0x00); //³õÊ¼ÇåÆÁ
  81   1           
  82   1         OLED_P8x16Str(0,0,"Press:");  //Ñ¹Á¦ ãÐÖµ  Êµ¼Ê²åÖµ
  83   1         OLED_P8x16Str(0,2,"Distan:"); //¾àÀë ãÐÖµ  Êµ¼Ê²îÖµ
  84   1         OLED_P8x16Str(0,4,"I2C:");  // 
  85   1         OLED_P8x16Str(0,6,"ADC:"); 
  86   1        
  87   1         GetParam(&myparam);//¶ÁÈ¡ãÐÖµ²ÎÊý
  88   1         oled_show_num(40,0,myparam.PressureValue,1);//ÏÔÊ¾Ñ¹Á¦ãÐÖµ
  89   1         oled_show_num(40,2,myparam.DistanceValue,0);//ÏÔÊ¾¾àÀëãÐÖµ
  90   1            
  91   1         while(1)
  92   1         {
  93   2           if(key_scan_task()) return;// ÍË³öµ±Ç°Ò³Ãæ ½øÈëÉèÖÃ½çÃæ
  94   2            
  95   2           Distan1=GetDistance(0);
  96   2           Distan2=GetDistance(1);//»ñÈ¡ ²â¾àÖµ
  97   2           Distan_difference = DistanDiffer(Distan1,Distan2);//¼ÆËã¾àÀë²îÖµ
  98   2           
  99   2           if(Distan_difference> myparam.DistanceValue&&((GetADCResult(0)+GetADCResult(1))>10)) //¾àÀë³¬¹ýãÐÖµ ÍÕ±
             -³  ÇÒÓÐÈË×ø  (GetADCResult(0)>10) && (GetADCResult(1)>10)
 100   2           {
 101   3             tuobei_switch = 1;//´ò¿ªÍÕ±³³ÖÐøÊ±¼ä¼ÆÊý¿ª¹Ø ¿ªÊ¼ÀÛ¼ÆÍÕ±³Ê±¼ä
 102   3             if(T_500ms > 10)//ÍÕ±³Ê±¼ä³¬¹ý 5s ÓïÒôÌáÐÑ
 103   3             {
 104   4      //        voice = 0;
 105   4      //        Delay1s();
 106   4      //        voice = 1;//ÓïÒôÌáÊ¾
 107   4              Beep(20);//·äÃùÆ÷ÆµÂÊ 25HZ
 108   4              tuobei_switch = 0;
 109   4              T_500ms = 0;
 110   4             }
 111   3           }
 112   2           else if((Distan2 > Distan1) && ((Distan2 - Distan1) > myparam.DistanceDiffLimit)&& ((GetADCResult(0)+Ge
             -tADCResult(1))>10) )//ÉÏÃæ´«¸ÐÆ÷-ÏÂÃæ´«¸ÐÆ÷ > ãÐÖµ ±¨¾¯
 113   2           {
 114   3              Beep(20);//·äÃùÆ÷ÆµÂÊ 25HZ
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 3   

 115   3           }
 116   2           else//Ã»ÓÐ³ÖÐø5sÒÔÉÏ³¬¹ýÍÕ±³ãÐÖµ
 117   2           {   
 118   3               tuobei_switch = 0;
 119   3               T_500ms = 0;
 120   3           }     
 121   2           
 122   2           if(T_500ms_flag == 1)//ADC ²É¼¯Íê³É   500ms Ö´ÐÐÒ»´Î
 123   2           { 
 124   3              jiuzuo_count++; //¾Ã×øÊ±¼ä¼ÆÊýÆ÷
 125   3              adc_result = GetADCResult(0);
 126   3              adc_result1 = GetADCResult(1); 
 127   3              oled_show_num(30,6, adc_result,0);  //ADC1  
 128   3              oled_show_num(80,6,adc_result1,0);  //ADC2       
 129   3              CurrentPress = DistanDiffer(adc_result,adc_result1);//¼ÆËãÑ¹Á¦²îÖµ
 130   3              //CurrentPress =(CurrentPress*100)/(adc_result+adc_result1);
 131   3              oled_show_num(80,0,CurrentPress,1);//ÏÔÊ¾µ±Ç°Ñ¹Á¦²îÖµ
 132   3              
 133   3              if((adc_result < 10) && (adc_result1 < 10))//ÆðÉí±êÖ¾
 134   3              {
 135   4                  qishen_count++;//ÆðÉíÊ±¼ä¼ÆÊý  500msÒ»´Î
 136   4                  if(qishen_count > 40)   //ÆðÉí³¬¹ý 20s ²ÅËãÆðÉí
 137   4                  {
 138   5                    jiuzuo_count = 0;//ÈËÆðÉí  ¾Ã×ø¼ÆÊýÆ÷Çå0          
 139   5                    qishen_count = 0; 
 140   5                  }
 141   4              }
 142   3              else
 143   3              {
 144   4                  qishen_count = 0;//²»Âú×ã ÆðÉíÌõ¼þ  ÆðÉí¼ÆÊýÆ÷Çå0  
 145   4              }
 146   3              if(CurrentPress> myparam.PressureValue)//³¬¹ý Ñ¹Á¦ãÐÖµ ¿ªÆô×øÍá¼ÆÊýÆ÷
 147   3              {
 148   4                  zuowai_switch = 1;//´ò¿ª×øÍá¼ÆÊý¿ª¹Ø
 149   4                  if(zuowai_count > 3)//×øÍá³¬¹ý7s
 150   4                  {
 151   5      //               voice = 0;//ÓïÒôÌáÊ¾
 152   5      //               Delay1s();
 153   5      //               voice = 1;//ÓïÒôÌáÊ¾
 154   5                     Beep(100);//·äÃùÆ÷ÆµÂÊ 5HZ
 155   5                     zuowai_count = 0;
 156   5                     zuowai_switch = 0;
 157   5                  }
 158   4              }
 159   3              else//Ã»ÓÐ×øÍá  ¹Ø±Õ×øÍá¼ÆÊý¿ª¹Ø
 160   3              {
 161   4                  //  voice = 1;
 162   4                     zuowai_count = 0;
 163   4                     zuowai_switch = 0;
 164   4              }
 165   3              if(jiuzuo_count > 120)//¾Ã×ø ³¬¹ý 1min 
 166   3              {
 167   4      //             voice = 1;
 168   4      //             Delay1ms();
 169   4                   voice = 0;//ÓïÒôÌáÊ¾
 170   4                   Delay1s();
 171   4                   voice = 1;//ÓïÒôÌáÊ¾
 172   4                   jiuzuo_count = 0;//¾Ã×ø¼ÆÊýÆ÷Çå0         
 173   4                   qishen_count = 0; 
 174   4              }     
 175   3              T_500ms_flag = 0;//¿ªÆôÏÂÒ»´Î¼ÆÊý
 176   3           }   
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 4   

 177   2           oled_show_num(80,2,Distan_difference,0);//ÏÔÊ¾µ±Ç°¾àÀë²îÖµ     
 178   2           oled_show_num(30,4,Distan1,0); //²â¾à1  Êµ¼ÊÖµ
 179   2           oled_show_num(80,4,Distan2,0); //²â¾à2  Êµ¼ÊÖµ 
 180   2         }
 181   1      }
 182          
 183          void pressureMenu()
 184          {
 185   1         unsigned char Key_Value=0;
 186   1         unsigned char line = 1;// ³õÊ¼»¯Ñ¡ÔñµÚÒ»ÐÐ·´°×
 187   1        
 188   1         OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 189   1        
 190   1         OLED_P8x16Str_t(0,0,"1.SetPressLimit"); //·´°×µÚÒ»ÐÐ 
 191   1         OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 192   1         OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 193   1         
 194   1         OLED_P8x16Str(0,6,"enter"); 
 195   1         OLED_P8x16Str(100,6,"esc"); 
 196   1         
 197   1         while(1)
 198   1         {
 199   2            Key_Value = GetKey();//»ñÈ¡°´¼ü
 200   2            if(Key_Value == LEFT)
 201   2            {
 202   3              if(line == 1)//µ±Ç°ÊÇµÚÒ»ÐÐ  ÐèÒªË¢ÐÂµÚÒ»ÐÐ ·´°×µÚ¶þÐÐ
 203   3              {
 204   4                 OLED_ClearLine(1);
 205   4                 OLED_P8x16Str(0,0,"1.SetPressLimit"); 
 206   4                 OLED_P8x16Str_t(0,2,"2.SetDistanLimit"); 
 207   4                 OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 208   4                
 209   4                 OLED_P8x16Str(0,6,"enter"); 
 210   4                 OLED_P8x16Str(100,6,"esc"); 
 211   4                 line = 2;
 212   4              }
 213   3              else if(line == 2)//µ±Ç°ÊÇµÚÒ»ÐÐ  ÐèÒªË¢ÐÂµÚ¶þÐÐ ·´°×µÚÈýÐÐ
 214   3              {
 215   4                 OLED_ClearLine(2);
 216   4                 OLED_P8x16Str(0,0,"1.SetPressLimit"); 
 217   4                 OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 218   4                 OLED_P8x16Str_t(0,4,"3.SetDisdifLimit"); 
 219   4                
 220   4                 OLED_P8x16Str(0,6,"enter"); 
 221   4                 OLED_P8x16Str(100,6,"esc"); 
 222   4                 line = 3;
 223   4              }
 224   3            } 
 225   2            else if(Key_Value == RIGHT) 
 226   2            {
 227   3              if(line == 3)
 228   3              {
 229   4               OLED_ClearLine(3);
 230   4               OLED_P8x16Str(0,0,"1.SetPressLimit"); 
 231   4               OLED_P8x16Str_t(0,2,"2.SetDistanLimit"); 
 232   4               OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 233   4              
 234   4               OLED_P8x16Str(0,6,"enter"); 
 235   4               OLED_P8x16Str(100,6,"esc"); 
 236   4                
 237   4               line = 2;        
 238   4              }
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 5   

 239   3              if(line == 2)//Ë¢ÐÂµÚ¶þÐÐ ·´°×µÚÒ»ÐÐ
 240   3              {
 241   4                OLED_ClearLine(3);
 242   4                OLED_P8x16Str_t(0,0,"1.SetPressLimit"); 
 243   4                OLED_P8x16Str(0,2,"2.SetDistanLimit"); 
 244   4                OLED_P8x16Str(0,4,"3.SetDisdifLimit"); 
 245   4              
 246   4                OLED_P8x16Str(0,6,"enter"); 
 247   4                OLED_P8x16Str(100,6,"esc"); 
 248   4                line = 1;    
 249   4              }
 250   3            } 
 251   2            else if(Key_Value == KEY_RETURN)//·µ»ØÖ÷²Ëµ¥  
 252   2            {
 253   3                 KeyFuncIndex = 0;
 254   3                 LastIndex = 0;
 255   3                 return;  
 256   3            }       
 257   2            
 258   2            else if(Key_Value == KEY_ENTER) 
 259   2            {
 260   3               if(line == 1)//µ÷ÕûÑ¹Á¦ãÐÖµ
 261   3               {
 262   4                 KeyFuncIndex = 4;
 263   4                 LastIndex = 0;
 264   4                 return;  
 265   4               }
 266   3               else if(line == 2)//µ÷Õû¾àÀëãÐÖµ
 267   3               {
 268   4                 KeyFuncIndex = 5;
 269   4                 LastIndex = 0;
 270   4                 return;  
 271   4               }
 272   3               else//µ÷Õû¾àÀë²îµÄãÐÖµ
 273   3               {
 274   4                 KeyFuncIndex = 6;
 275   4                 LastIndex = 0;
 276   4                 return;  
 277   4               }
 278   3            }
 279   2           
 280   2         }
 281   1      }
 282          
 283          void DistanceMenu()
 284          {
 285   1      
 286   1        
 287   1      }
 288          
 289          void DisDiffMenu()
 290          {
 291   1      
 292   1      
 293   1      }
 294          void ChangePressure()//ÉèÖÃ Ñ¹Á¦ãÐÖµ
 295          {
 296   1         unsigned char Key_Value=0;
 297   1        
 298   1         OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 299   1        
 300   1         OLED_P8x16Str(40,0,"Setting");//ÉèÖÃ  
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 6   

 301   1        
 302   1         OLED_P8x16Str(0,2,"Pressure:");  
 303   1         GetParam(&myparam);
 304   1         oled_show_num(80,2,myparam.PressureValue,1);
 305   1         
 306   1         OLED_P8x16Str(0,6,"ok"); 
 307   1         OLED_P8x16Str(100,6,"esc"); 
 308   1        
 309   1         while(1)
 310   1         {
 311   2            Key_Value = GetKey();//»ñÈ¡°´¼ü
 312   2            if(Key_Value == LEFT)
 313   2            {
 314   3               myparam.PressureValue+=5;
 315   3               if(myparam.PressureValue > 70) myparam.PressureValue = 10;     
 316   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 317   3               OLED_P8x16Str(0,2,"Pressure:");  
 318   3               oled_show_num(80,2,myparam.PressureValue,1);//ÏÔÊ¾ÐÂÖµ
 319   3                  
 320   3               OLED_P8x16Str(0,6,"ok"); 
 321   3               OLED_P8x16Str(100,6,"esc"); 
 322   3            } 
 323   2            else if(Key_Value == RIGHT) 
 324   2            {
 325   3               myparam.PressureValue-=5;
 326   3               if(myparam.PressureValue < 10) myparam.PressureValue = 70;     
 327   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 328   3               OLED_P8x16Str(0,2,"Pressure:");  
 329   3               oled_show_num(80,2,myparam.PressureValue,1);//ÏÔÊ¾ÐÂÖµ
 330   3               
 331   3               OLED_P8x16Str(0,6,"ok"); 
 332   3               OLED_P8x16Str(100,6,"esc");    
 333   3            } 
 334   2            else if(Key_Value == KEY_RETURN)//·µ»ØÉèÖÃÑ¡Ôñ½çÃæ
 335   2            {
 336   3                 KeyFuncIndex = 1;
 337   3                 LastIndex = 0;
 338   3                 return;  
 339   3            }       
 340   2            
 341   2            else if(Key_Value == KEY_ENTER) 
 342   2            {
 343   3       
 344   3                 SetParam(&myparam);//±£´æ²ÎÊý
 345   3              
 346   3                 OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 347   3        
 348   3                 OLED_P8x16Str(40,0,"Save OK!");//±£´æ³É¹¦  
 349   3                   
 350   3                 delay(500);//ÑÓÊ±500ms 
 351   3                        
 352   3                 KeyFuncIndex = 0;
 353   3                 LastIndex = 0;
 354   3                 return;//·µ»ØÖ÷²Ëµ¥         
 355   3            }
 356   2        
 357   2          }
 358   1      }
 359          void ChangeDistance()//¸Ä±ä¾àÀëãÐÖµ
 360          {
 361   1         unsigned char Key_Value=0;
 362   1        
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 7   

 363   1         OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 364   1        
 365   1         OLED_P8x16Str(40,0,"Setting");//ÉèÖÃ  
 366   1        
 367   1         OLED_P8x16Str(0,2,"Distance:");  
 368   1         GetParam(&myparam);
 369   1         oled_show_num(80,2,myparam.DistanceValue,0);//ÏÔÊ¾¾àÀëãÐÖµ
 370   1         
 371   1         OLED_P8x16Str(0,6,"ok"); 
 372   1         OLED_P8x16Str(100,6,"esc"); 
 373   1        
 374   1         while(1)
 375   1         {
 376   2            Key_Value = GetKey();//»ñÈ¡°´¼ü
 377   2            if(Key_Value == LEFT)
 378   2            {
 379   3               myparam.DistanceValue++;
 380   3               if(myparam.DistanceValue > 12) myparam.DistanceValue = 3;      
 381   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 382   3               OLED_P8x16Str(0,2,"Distance:");  
 383   3               oled_show_num(80,2,myparam.DistanceValue,0);//ÏÔÊ¾ÐÂÖµ ²»´ø%ºÅ
 384   3                  
 385   3               OLED_P8x16Str(0,6,"ok"); 
 386   3               OLED_P8x16Str(100,6,"esc"); 
 387   3            } 
 388   2            else if(Key_Value == RIGHT) 
 389   2            {
 390   3               myparam.DistanceValue--;
 391   3               if(myparam.DistanceValue < 1) myparam.DistanceValue = 12;      
 392   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 393   3               OLED_P8x16Str(0,2,"Distance:");  
 394   3               oled_show_num(80,2,myparam.DistanceValue,0);//ÏÔÊ¾ÐÂÖµ
 395   3               
 396   3               OLED_P8x16Str(0,6,"ok"); 
 397   3               OLED_P8x16Str(100,6,"esc");    
 398   3            } 
 399   2            else if(Key_Value == KEY_RETURN)//·µ»ØÉèÖÃÑ¡Ôñ½çÃæ
 400   2            {
 401   3                 KeyFuncIndex = 1;
 402   3                 LastIndex = 0;
 403   3                 return;  
 404   3            }       
 405   2            
 406   2            else if(Key_Value == KEY_ENTER) 
 407   2            {
 408   3       
 409   3                 SetParam(&myparam);//±£´æ²ÎÊý
 410   3              
 411   3                 OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 412   3        
 413   3                 OLED_P8x16Str(40,0,"Save OK!");//±£´æ³É¹¦  
 414   3                   
 415   3                 delay(500);//ÑÓÊ±500ms 
 416   3                        
 417   3                 KeyFuncIndex = 0;
 418   3                 LastIndex = 0;
 419   3                 return;//·µ»ØÖ÷²Ëµ¥         
 420   3            }
 421   2        
 422   2          }
 423   1      }
 424          
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 8   

 425          void changeDisDiff()//ÉèÖÃ¾àÀë²îµÄãÐÖµ
 426          {
 427   1         unsigned char Key_Value=0;
 428   1        
 429   1         OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 430   1        
 431   1         OLED_P8x16Str(40,0,"Setting");//ÉèÖÃ  
 432   1         OLED_P8x16Str(0,2,"DistDiff:");  
 433   1         GetParam(&myparam);
 434   1         oled_show_num(80,2,myparam.DistanceDiffLimit,0);//ÏÔÊ¾¾àÀë²îµÄãÐÖµ
 435   1         
 436   1         OLED_P8x16Str(0,6,"ok"); 
 437   1         OLED_P8x16Str(100,6,"esc"); 
 438   1        
 439   1         while(1)
 440   1         {
 441   2            Key_Value = GetKey();//»ñÈ¡°´¼ü
 442   2            if(Key_Value == LEFT)
 443   2            {
 444   3               myparam.DistanceDiffLimit+=10;
 445   3               if(myparam.DistanceDiffLimit > 240) myparam.DistanceDiffLimit = 0;     
 446   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 447   3               OLED_P8x16Str(0,2,"Differ:");  
 448   3               oled_show_num(80,2,myparam.DistanceDiffLimit,0);//ÏÔÊ¾ÐÂÖµ ²»´ø%ºÅ
 449   3                  
 450   3               OLED_P8x16Str(0,6,"ok"); 
 451   3               OLED_P8x16Str(100,6,"esc"); 
 452   3            } 
 453   2            else if(Key_Value == RIGHT) 
 454   2            {
 455   3               myparam.DistanceDiffLimit-=10;
 456   3               if(myparam.DistanceDiffLimit < 10) myparam.DistanceDiffLimit = 240;      
 457   3               OLED_ClearLine(2);//Çåµô¾ÉÖµ
 458   3               OLED_P8x16Str(0,2,"Differ:");  
 459   3               oled_show_num(80,2,myparam.DistanceDiffLimit,0);//ÏÔÊ¾ÐÂÖµ
 460   3               
 461   3               OLED_P8x16Str(0,6,"ok"); 
 462   3               OLED_P8x16Str(100,6,"esc");    
 463   3            } 
 464   2            else if(Key_Value == KEY_RETURN)//·µ»ØÉèÖÃÑ¡Ôñ½çÃæ
 465   2            {
 466   3                 KeyFuncIndex = 1;
 467   3                 LastIndex = 0;
 468   3                 return;  
 469   3            }       
 470   2            
 471   2            else if(Key_Value == KEY_ENTER) 
 472   2            {
 473   3       
 474   3                 SetParam(&myparam);//±£´æ²ÎÊý
 475   3              
 476   3                 OLED_Fill(0x00); //³õÊ¼ÇåÆÁ  
 477   3        
 478   3                 OLED_P8x16Str(40,0,"Save OK!");//±£´æ³É¹¦  
 479   3                   
 480   3                 delay(500);//ÑÓÊ±500ms 
 481   3                        
 482   3                 KeyFuncIndex = 0;
 483   3                 LastIndex = 0;
 484   3                 return;//·µ»ØÖ÷²Ëµ¥         
 485   3            }
 486   2        
C51 COMPILER V9.50a   MENUFUN                                                              11/19/2019 23:22:03 PAGE 9   

 487   2          }
 488   1      }
 489          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1838    ----
   CONSTANT SIZE    =    143    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
