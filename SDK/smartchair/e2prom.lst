C51 COMPILER V9.00   E2PROM                                                                11/02/2019 16:53:27 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE E2PROM
OBJECT MODULE PLACED IN e2prom.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE driver\e2prom.c BROWSE INCDIR(.\driver) DEBUG OBJECTEXTEND PRINT(.\e2pro
                    -m.lst) OBJECT(e2prom.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include "intrins.h"
   3          #include "e2prom.h"
   4          #include "stdio.h"
   5          
   6          //STC12C5A60S2 EEPROM的地址范围为：0x0000---0x03ff(0-1023)
   7          
   8          parameterTypedef myparam;//参数结构体
   9          
  10          /*----------------------------
  11          Software delay function
  12          ----------------------------*/
  13          // static void Delay(unsigned char n)
  14          // {
  15          //     unsigned int x;
  16          
  17          //     while (n--)
  18          //     {
  19          //         x = 0;
  20          //         while (++x);
  21          //     }
  22          // }
  23          
  24          /*----------------------------
  25          Disable ISP/IAP/EEPROM function
  26          Make MCU in a safe state
  27          ----------------------------*/
  28          void IapIdle()
  29          {
  30   1          IAP_CONTR = 0;                  //Close IAP function
  31   1          IAP_CMD = 0;                    //Clear command to standby
  32   1          IAP_TRIG = 0;                   //Clear trigger register
  33   1          IAP_ADDRH = 0x80;               //Data ptr point to non-EEPROM area
  34   1          IAP_ADDRL = 0;                  //Clear IAP address to prevent misuse
  35   1      }
  36          
  37          /*----------------------------
  38          Read one unsigned char from ISP/IAP/EEPROM area
  39          Input: addr (ISP/IAP/EEPROM address)
  40          Output:Flash data
  41          ----------------------------*/
  42          unsigned char IapReadByte(unsigned int addr)
  43          {
  44   1          unsigned char dat;                       //Data buffer
  45   1      
  46   1                EA = 0;
  47   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  48   1          IAP_CMD = CMD_READ;             //Set ISP/IAP/EEPROM READ command
  49   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  50   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  51   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  52   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  53   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  54   1          dat = IAP_DATA;                 //Read ISP/IAP/EEPROM data
C51 COMPILER V9.00   E2PROM                                                                11/02/2019 16:53:27 PAGE 2   

  55   1          IapIdle();                      //Close ISP/IAP/EEPROM function
  56   1          EA = 1;
  57   1          return dat;                     //Return Flash data
  58   1      }
  59          
  60          /*----------------------------
  61          Program one unsigned char to ISP/IAP/EEPROM area
  62          Input: addr (ISP/IAP/EEPROM address)
  63                 dat (ISP/IAP/EEPROM data)
  64          Output:-
  65          ----------------------------*/
  66          void IapWriteByte(unsigned int addr, unsigned char dat)
  67          {
  68   1                EA = 0;
  69   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  70   1          IAP_CMD = CMD_PROGRAM;          //Set ISP/IAP/EEPROM PROGRAM command
  71   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  72   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  73   1          IAP_DATA = dat;                 //Write ISP/IAP/EEPROM data
  74   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  75   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  76   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  77   1                EA = 1;
  78   1          IapIdle();
  79   1      }
  80          
  81          /*----------------------------
  82          Erase one sector area
  83          Input: addr (ISP/IAP/EEPROM address)
  84          Output:-
  85          ----------------------------*/
  86          void IapEraseSector(unsigned int addr)
  87          {
  88   1          IAP_CONTR = ENABLE_IAP;         //Open IAP function, and set wait time
  89   1          IAP_CMD = CMD_ERASE;            //Set ISP/IAP/EEPROM ERASE command
  90   1          IAP_ADDRL = addr;               //Set ISP/IAP/EEPROM address low
  91   1          IAP_ADDRH = addr >> 8;          //Set ISP/IAP/EEPROM address high
  92   1          IAP_TRIG = 0x5a;                //Send trigger command1 (0x5a)
  93   1          IAP_TRIG = 0xa5;                //Send trigger command2 (0xa5)
  94   1          _nop_();                        //MCU will hold here until ISP/IAP/EEPROM operation complete
  95   1          IapIdle();
  96   1      }
  97          //Function:任意地址写入一串数据
  98          //Description：向AT24C02写入一串数据
  99          //Input:写地址,写数据,数据长度
 100          //Output:无
 101          //Return:无
 102          //Others:无
 103          // void TOF_Serial_Write(unsigned char Writeaddr,unsigned char *Str,unsigned char Len)
 104          // {
 105          //      while(Len--)
 106          //      {
 107          //              IapWriteByte(Writeaddr,*Str);
 108          //              Writeaddr++;
 109          //              Str++;
 110          //      }
 111          // }
 112          
 113          
 114          //Function:指定地址读出一串数据
 115          //Description：向AT24C02读出一串数据
 116          //Input:读地址,读数据,数据长度
C51 COMPILER V9.00   E2PROM                                                                11/02/2019 16:53:27 PAGE 3   

 117          //Output:无
 118          //Return:无
 119          //Others:无
 120          // void TOF_Serial_Read(unsigned char Readaddr,unsigned char *Str,unsigned char Len)
 121          // {
 122          //      while(Len)
 123          //      {
 124          //              *Str++ = IapReadByte(Readaddr++);
 125          //              Len--;
 126          //      }
 127          // }
 128          
 129          // void TestE2PROM()
 130          // {
 131          //     unsigned int i;                   //Delay
 132          //     IapEraseSector(IAP_ADDRESS);    //Erase current secto
 133          //        printf("1.Read:\r\n");
 134          //     for (i=0; i<255; i++)           //Check whether all sector data is FF
 135          //     {
 136          //                              printf("%bd ",IapReadByte(IAP_ADDRESS+i));      
 137          //     }
 138          //              printf("\r\n");
 139          //              
 140          //     Delay(10);               //Delay
 141          //              printf("2.Write:\r\n");
 142          //     for(i=0; i<255; i++)           //Program 512 bytes data into data flash
 143          //     {
 144          //         IapWriteByte(IAP_ADDRESS+i, (unsigned char)i);
 145          //                        printf("%bd ",(unsigned char)i);
 146          //     }
 147          //              printf("\r\n");
 148          //     Delay(10);               //Delay 
 149          //              printf("3.Read:\r\n");
 150          //     for(i=0; i<255; i++)           //Verify 512 bytes data
 151          //     {
 152          //        printf("%bd ",IapReadByte(IAP_ADDRESS+i));          
 153          //     }
 154          //              printf("\r\n");
 155          //              printf("End\r\n");
 156          // }
 157          
 158          void GetParam(parameterTypedef *param)
 159          {
 160   1         param->PressureValue = IapReadByte(paramADDRESS);//压力阈值10%
 161   1               param->DistanceValue =IapReadByte(paramADDRESS+1);//距离阈值 3cm           
 162   1      }
 163          
 164          void SetParam(parameterTypedef *param)
 165          {
 166   1              IapEraseSector(10);    //Erase current secto 
 167   1        IapWriteByte(paramADDRESS, param->PressureValue);
 168   1              IapWriteByte(paramADDRESS+1, param->DistanceValue);      
 169   1      }
 170          
 171          
 172          void MyParamInit(parameterTypedef *param)
 173          {
 174   1         if(IapReadByte(600) != 0x5A)//没有参数  需要先设置默认值
 175   1               {
 176   2                       IapEraseSector(10);    //Erase current secto
 177   2                       IapEraseSector(600); //Erase current secto
 178   2           IapWriteByte(600,0x5A);
C51 COMPILER V9.00   E2PROM                                                                11/02/2019 16:53:27 PAGE 4   

 179   2           param->PressureValue = 10;//压力阈值10%
 180   2                       param->DistanceValue =3;//距离阈值 3cm    
 181   2                       SetParam(param);//设置参数
 182   2                       //TOF_Serial_Write(100,(unsigned char*)param,sizeof(param));
 183   2               }
 184   1               GetParam(param);//获取参数+
 185   1         //TOF_Serial_Read(100,(unsigned char*)param,sizeof(param));    
 186   1      }
 187          
 188          
 189          
 190          
 191          
 192          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
